//UVA 10692
#include <iostream>
#include <cstring>
using namespace std;
int phi[10010];
int a[15];
char s[15];
int n,m;
void gen_phi() {
	int i,j;
	for(i=1;i<=10010;i++) phi[i]=i;
	for(i=2;i<=10010;i+=2) phi[i]/=2;
	for(i=3;i<=10010;i+=2) if(phi[i]==i) {
		for(j=i;j<=10010;j+=i)
			phi[j]=phi[j]/i*(i-1);
	}
}
bool init() {
	cin>>s;
	if(s[0]=='#') return false;
	m=0;
	int len=strlen(s);
	for(int i=0;i<len;i++) {
		m=m*10+s[i]-'0';
	}
	cin>>n;
	for(int i=0;i<n;i++) cin>>a[i];
	return true;
}

int pow_mod(int x,int n,int mod) {
	int res=1;
	while(n>0) {
		if(n&1) res=res*x%mod;
		x=x*x%mod;
		n>>=1;
	}
	return res;
}

int dfs(int d,int mod) {
	if(d==n-1) return a[n-1]%mod;
	int tmp=dfs(d+1,phi[mod]);
	int ans=pow_mod(a[d],tmp+phi[mod],mod);
	return ans;
}
int main() {
	int kase=1;
	gen_phi();
	while(init()) {
		int ans=dfs(0,m);
		cout<<"Case #"<<kase++<<": "<<ans<<endl;
	}
	return 0;
}
